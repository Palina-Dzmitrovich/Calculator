{
  "stats": {
    "suites": 4,
    "tests": 16,
    "passes": 16,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-14T18:36:49.748Z",
    "end": "2020-12-14T18:36:49.809Z",
    "duration": 61,
    "testsRegistered": 16,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2dade917-1dbe-4671-bb50-8750717a4054",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
          "title": "addNumbers positive scenarios",
          "fullFile": "D:\\TA_program\\Calculator\\test\\specs\\addNumbers.spec.js",
          "file": "\\test\\specs\\addNumbers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"addNumbers positive scenarios\"",
              "fullTitle": "addNumbers positive scenarios \"before each\" hook in \"addNumbers positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addition = new Calculator();",
              "err": {},
              "uuid": "23f01c17-5bcf-4ba5-a40c-e91315bd6e71",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"addNumbers positive scenarios\"",
              "fullTitle": "addNumbers positive scenarios \"after each\" hook in \"addNumbers positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addition = null;",
              "err": {},
              "uuid": "b22b69f0-38b5-42c6-b470-3c5e43dd134b",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return the sum of several (>=2) whole positive numbers",
              "fullTitle": "addNumbers positive scenarios should return the sum of several (>=2) whole positive numbers",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(addition.addNumbers(10, 7, 9)).to.equal(26);",
              "err": {},
              "uuid": "715a0cea-cb2a-4384-a752-2890ddf9f807",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the sum of several (>=2) whole negative",
              "fullTitle": "addNumbers positive scenarios should return the sum of several (>=2) whole negative",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(addition.addNumbers(-6, -34)).to.equal(-40);",
              "err": {},
              "uuid": "2fe97c97-3ae4-4b48-82ef-1a30fdd7c2c6",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the sum of several (>=2) zeros",
              "fullTitle": "addNumbers positive scenarios should return the sum of several (>=2) zeros",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(addition.addNumbers(0, 0, 0, 0)).to.equal(0);",
              "err": {},
              "uuid": "632e8271-6a3c-4956-b3a2-45990ee56252",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the sum of several (>=2) fractions",
              "fullTitle": "addNumbers positive scenarios should return the sum of several (>=2) fractions",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(addition.addNumbers(5.34, 7.26, 4.40, -7.50)).to.equal(9.50);",
              "err": {},
              "uuid": "c8da41ec-e17c-43e0-95be-a334bffc7f77",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the sum of several (>=2) numbers (positive and negative), zeros, fractions",
              "fullTitle": "addNumbers positive scenarios should return the sum of several (>=2) numbers (positive and negative), zeros, fractions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(addition.addNumbers(2, -18, 0, 0.5, 7.5, 0)).to.equal(-8);",
              "err": {},
              "uuid": "dc39170f-ce0b-4ea8-a49f-eac1dbbd8df8",
              "parentUUID": "9c105f68-2fb2-4e83-ab49-5dd751e15fd2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "715a0cea-cb2a-4384-a752-2890ddf9f807",
            "2fe97c97-3ae4-4b48-82ef-1a30fdd7c2c6",
            "632e8271-6a3c-4956-b3a2-45990ee56252",
            "c8da41ec-e17c-43e0-95be-a334bffc7f77",
            "dc39170f-ce0b-4ea8-a49f-eac1dbbd8df8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6d314ff4-79e0-42a0-b3d9-39470c6eb5c8",
          "title": "addNumbers negative scenarios",
          "fullFile": "D:\\TA_program\\Calculator\\test\\specs\\addNumbers.spec.js",
          "file": "\\test\\specs\\addNumbers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"addNumbers negative scenarios\"",
              "fullTitle": "addNumbers negative scenarios \"before each\" hook in \"addNumbers negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addition = new Calculator();",
              "err": {},
              "uuid": "7e2066b4-fc30-42a6-a2d7-fad807e33338",
              "parentUUID": "6d314ff4-79e0-42a0-b3d9-39470c6eb5c8",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"addNumbers negative scenarios\"",
              "fullTitle": "addNumbers negative scenarios \"after each\" hook in \"addNumbers negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "addition = null;",
              "err": {},
              "uuid": "e81f3e8f-9163-4b5d-9e29-7b2c34cab4aa",
              "parentUUID": "6d314ff4-79e0-42a0-b3d9-39470c6eb5c8",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display an error message if no parameters are provided",
              "fullTitle": "addNumbers negative scenarios should display an error message if no parameters are provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => addition.addNumbers().to.throw('Please, provide at least 2 numbers'));",
              "err": {},
              "uuid": "c165f344-62f1-420a-afb9-688a4e64abea",
              "parentUUID": "6d314ff4-79e0-42a0-b3d9-39470c6eb5c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error message if only 1 parameter is provided",
              "fullTitle": "addNumbers negative scenarios should display an error message if only 1 parameter is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => addition.addNumbers(6).to.throw('Please, provide at least 2 numbers'));",
              "err": {},
              "uuid": "07a2b555-ee25-4bd2-ad70-4d0462e09aac",
              "parentUUID": "6d314ff4-79e0-42a0-b3d9-39470c6eb5c8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error message if at least one of the parameters is not a number",
              "fullTitle": "addNumbers negative scenarios should display an error message if at least one of the parameters is not a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => addition.addNumbers(5, 444, true, -7)).to.throw('[true] is not a number');",
              "err": {},
              "uuid": "76f9eb48-8504-4777-b356-cf7a14999dc9",
              "parentUUID": "6d314ff4-79e0-42a0-b3d9-39470c6eb5c8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c165f344-62f1-420a-afb9-688a4e64abea",
            "07a2b555-ee25-4bd2-ad70-4d0462e09aac",
            "76f9eb48-8504-4777-b356-cf7a14999dc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
          "title": "multiplyNumbers positive scenarios",
          "fullFile": "D:\\TA_program\\Calculator\\test\\specs\\multiplyNumbers.spec.js",
          "file": "\\test\\specs\\multiplyNumbers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiplyNumbers positive scenarios\"",
              "fullTitle": "multiplyNumbers positive scenarios \"before each\" hook in \"multiplyNumbers positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "multiplication = new Calculator();",
              "err": {},
              "uuid": "5b94422f-d9e8-4df7-aea3-98e2ebaa5585",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiplyNumbers positive scenarios\"",
              "fullTitle": "multiplyNumbers positive scenarios \"after each\" hook in \"multiplyNumbers positive scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "multiplication = null;",
              "err": {},
              "uuid": "a39fd34b-e812-4e13-b5c5-f9f3ea4b9713",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should return the product of several (>=2) whole positive numbers",
              "fullTitle": "multiplyNumbers positive scenarios should return the product of several (>=2) whole positive numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(multiplication.multiplyNumbers(6, 10, 7, 2)).to.equal(840);",
              "err": {},
              "uuid": "dfbe7173-a4f0-4771-a7f6-baf204e47691",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the product of several (>=2) whole negative numbers",
              "fullTitle": "multiplyNumbers positive scenarios should return the product of several (>=2) whole negative numbers",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(multiplication.multiplyNumbers(-8, -100, -7, -2)).to.equal(11200);",
              "err": {},
              "uuid": "0fc1d3ac-d25c-482a-b9c6-1364861a5e76",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the product of several (>=2) fractions",
              "fullTitle": "multiplyNumbers positive scenarios should return the product of several (>=2) fractions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(multiplication.multiplyNumbers(4.5, -5.75, 2.25)).to.equal(-58.21875);",
              "err": {},
              "uuid": "f0bab0aa-55b4-4d2b-abf4-abfb8c96a671",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the product of several (>=2) zeros",
              "fullTitle": "multiplyNumbers positive scenarios should return the product of several (>=2) zeros",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(multiplication.multiplyNumbers(0, 0, 0, 0)).to.equal(0);",
              "err": {},
              "uuid": "6bbff98f-f7d2-41b7-a1d8-03934b90f526",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return the product of several (>=2) numbers (positive and negative), zeros, fractions",
              "fullTitle": "multiplyNumbers positive scenarios should return the product of several (>=2) numbers (positive and negative), zeros, fractions",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(multiplication.multiplyNumbers(8.75, 10, -7, 0, -0.5, 0, 200)).to.equal(0);",
              "err": {},
              "uuid": "2ee99f6a-0d21-4631-94d1-b293ad10bbcb",
              "parentUUID": "c3235d20-41d4-4b46-afa0-73f50c1dc19b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfbe7173-a4f0-4771-a7f6-baf204e47691",
            "0fc1d3ac-d25c-482a-b9c6-1364861a5e76",
            "f0bab0aa-55b4-4d2b-abf4-abfb8c96a671",
            "6bbff98f-f7d2-41b7-a1d8-03934b90f526",
            "2ee99f6a-0d21-4631-94d1-b293ad10bbcb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "41d6fefe-140c-4724-91ff-04ef888d959a",
          "title": "multiplyNumbers negative scenarios",
          "fullFile": "D:\\TA_program\\Calculator\\test\\specs\\multiplyNumbers.spec.js",
          "file": "\\test\\specs\\multiplyNumbers.spec.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"multiplyNumbers negative scenarios\"",
              "fullTitle": "multiplyNumbers negative scenarios \"before each\" hook in \"multiplyNumbers negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "multiplication = new Calculator();",
              "err": {},
              "uuid": "09a2950b-e809-4e04-89dd-6089f8e6e089",
              "parentUUID": "41d6fefe-140c-4724-91ff-04ef888d959a",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"multiplyNumbers negative scenarios\"",
              "fullTitle": "multiplyNumbers negative scenarios \"after each\" hook in \"multiplyNumbers negative scenarios\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "multiplication = null;",
              "err": {},
              "uuid": "6d11bb5d-cd44-4f77-a2e4-749571a6b463",
              "parentUUID": "41d6fefe-140c-4724-91ff-04ef888d959a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "should display an error message if no parameters are provided",
              "fullTitle": "multiplyNumbers negative scenarios should display an error message if no parameters are provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => multiplication.multiplyNumbers().to.throw('Please, provide at least 2 numbers'));",
              "err": {},
              "uuid": "986fca6e-f5ae-4916-a876-868232d4a7b1",
              "parentUUID": "41d6fefe-140c-4724-91ff-04ef888d959a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error message if only 1 parameter is provided",
              "fullTitle": "multiplyNumbers negative scenarios should display an error message if only 1 parameter is provided",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => multiplication.multiplyNumbers(87).to.throw('Please, provide at least 2 numbers'));",
              "err": {},
              "uuid": "84b1a1d3-32ff-41ba-a2b3-a18c4681e187",
              "parentUUID": "41d6fefe-140c-4724-91ff-04ef888d959a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should display an error message if at least one of the parameters is not a number",
              "fullTitle": "multiplyNumbers negative scenarios should display an error message if at least one of the parameters is not a number",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(() => multiplication.multiplyNumbers(8, 0, 'string', 88, -2)).to.throw('[string] is not a number');",
              "err": {},
              "uuid": "57240720-8353-488b-90ba-f45bf4e3c335",
              "parentUUID": "41d6fefe-140c-4724-91ff-04ef888d959a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "986fca6e-f5ae-4916-a876-868232d4a7b1",
            "84b1a1d3-32ff-41ba-a2b3-a18c4681e187",
            "57240720-8353-488b-90ba-f45bf4e3c335"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}